// support/release.js
const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');
const semver = require('semver');

const releaseType = process.argv[2]; // L·∫•y lo·∫°i release (patch, minor, major) t·ª´ d√≤ng l·ªánh
if (!['patch', 'minor', 'major'].includes(releaseType)) {
  console.error('L·ªói: Vui l√≤ng ch·ªâ ƒë·ªãnh lo·∫°i release: patch, minor, ho·∫∑c major.');
  process.exit(1);
}

const packageJsonPath = path.resolve(__dirname, '../package.json');
const manifestJsonPath = path.resolve(__dirname, '../src/manifest.json');

try {
  // 1. ƒê·ªçc v√† tƒÉng phi√™n b·∫£n
  const packageJson = JSON.parse(fs.readFileSync(packageJsonPath, 'utf-8'));
  const oldVersion = packageJson.version;
  const newVersion = semver.inc(oldVersion, releaseType);

  console.log(`ƒêang n√¢ng c·∫•p phi√™n b·∫£n: ${oldVersion} -> ${newVersion}`);

  // 2. C·∫≠p nh·∫≠t package.json
  packageJson.version = newVersion;
  fs.writeFileSync(packageJsonPath, JSON.stringify(packageJson, null, 2) + '\n');
  console.log('‚úÖ ƒê√£ c·∫≠p nh·∫≠t package.json');

  // 3. C·∫≠p nh·∫≠t manifest.json
  const manifestJson = JSON.parse(fs.readFileSync(manifestJsonPath, 'utf-8'));
  manifestJson.version = newVersion;
  fs.writeFileSync(manifestJsonPath, JSON.stringify(manifestJson, null, 2) + '\n');
  console.log('‚úÖ ƒê√£ c·∫≠p nh·∫≠t manifest.json');

  // 4. Ch·∫°y c√°c l·ªánh Git
  console.log('ƒêang th·ª±c thi c√°c l·ªánh Git...');
  execSync('git add package.json src/manifest.json');
  execSync(`git commit -m "chore(release): Bump version to v${newVersion}"`);
  execSync(`git tag v${newVersion}`);
  execSync('git push');
  execSync('git push --tags');
  
  console.log(`üöÄ Ho√†n t·∫•t! ƒê√£ ph√°t h√†nh phi√™n b·∫£n v${newVersion}.`);
  console.log("GitHub Actions s·∫Ω t·ª± ƒë·ªông build v√† t·∫°o release m·ªõi.");

} catch (error) {
  console.error('ƒê√£ x·∫£y ra l·ªói trong qu√° tr√¨nh release:', error.message);
  // Rollback c√°c thay ƒë·ªïi n·∫øu c√≥ l·ªói
  execSync('git checkout -- package.json src/manifest.json');
  process.exit(1);
}
